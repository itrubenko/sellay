Links:

1. Create template and endpoint with buttons
2. Save cred into DB
3.Have customer ID from DB create JWT
4.Set JWT cookie in browser
5.Validate JWT for all protected routes.

<!-- // Done -->
Create account flow
1. Send username/password
2. Validate data before saving to model
3. Bycrypt password before save
4. Save pass Bycrypted password in model
5. Create jwt with user id and set it in cookie 
6. Redirect user to my account 
7. Validate JWT ,decode it , find user with such an id, let it go or logout


<!-- // Done -->
1. Prepare fully developed Login-Show like page.+
2. Redirect login user to profile page+


// TODO
1. Move my image docker image to ECR.
1.1. Components NodeJS, MongoDB, MongoDB Express
2. Login with google account https://developers.google.com/identity/protocols/oauth2/web-server?hl=ru#node.js
3. https://console.cloud.google.com/auth/overview?inv=1&invt=AbyEng&project=sellay

sso github
https://github.com/settings/applications

sso facebook
https://developers.facebook.com/apps/2070816173415614/dashboard/

SSO Apple
https://developer.apple.com/documentation/signinwithapple/configuring-your-webpage-for-sign-in-with-apple


Google
https://cloud.google.com/security/products/recaptcha?hl=ru
https://www.google.com/recaptcha/admin/site/726747646
https://console.cloud.google.com/security/recaptcha/6Lf-SVErAAAAAPvKiNtTOKX9226qhLf1oaUjz8K0/overview?project=sellay&authuser=0&inv=1&invt=Aby4Ag



protect site full site with password
1. Create endpoint for login in site - done
2. Add Google Recapcha
3. Add Google chatbot
4. Add GTM
5. PingID ... ping-identity/p14c-nodejs-sdk